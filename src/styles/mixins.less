.gradient(@type; @colors; @dir: 0deg; @prefixes: webkit, moz, ms, o; @index: length(@prefixes)) when (@index > 0) {
  .gradient(@type; @colors; @dir; @prefixes; (@index - 1));

  @prefix: extract(@prefixes, @index);
  @dir-old: 90 - (@dir);

  background-image: ~"-@{prefix}-@{type}-gradient(@{dir-old}, @{colors})";
  & when ( @index = length(@prefixes) ) {
    background-image: ~"@{type}-gradient(@{dir}, @{colors})";
  }
}

.border-radius(@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius:    @radius;
  border-radius:         @radius;

  -moz-background-clip:    padding;
  -webkit-background-clip: padding-box;
  background-clip:         padding-box;
}

.texture(@image; @color; @size: auto; @position: 'center, top left'; @repeat: 'repeat, repeat') {
  content: '';
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;

  background-color: @color;
  mask-image: url(@image);
  mask-size: @size;
  mask-position: @position;
  mask-repeat: @repeat;
}

.respond-min(@width; @rules) {
  @media screen and (min-width: @width) {
    @rules();
  }
}

.respond-max(@width; @rules) {
  @media screen and (max-width: @width) {
    @rules();
  }
}
